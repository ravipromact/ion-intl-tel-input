{"ast":null,"code":"import { NG_VALIDATORS, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { PhoneNumberUtil } from 'google-libphonenumber';\nimport * as i0 from \"@angular/core\";\n/* const validateInput: ValidatorFn = (\r\n  control: FormGroup\r\n): ValidationErrors | null => {\r\n  const error = { inValid: true };\r\n  const isRequired = control.errors && control.errors.required;\r\n  let phoneNumber: PhoneNumber;\r\n\r\n  try {\r\n    phoneNumber = PhoneNumberUtil.getInstance().parse(\r\n      control.value.number,\r\n      control.value.isoCode\r\n    );\r\n  } catch (e) {\r\n    if (!isRequired) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  if (control.value) {\r\n    if (!phoneNumber) {\r\n      return error;\r\n    } else {\r\n      if (\r\n        !PhoneNumberUtil.getInstance().isValidNumberForRegion(\r\n          phoneNumber,\r\n          control.value.isoCode\r\n        )\r\n      ) {\r\n        return error;\r\n      }\r\n    }\r\n  }\r\n  return;\r\n}; */\n\nexport class IonIntlTelInputValidators {\n  static phone(control) {\n    const error = {\n      phone: true\n    };\n    let phoneNumber;\n\n    if (!control.value) {\n      return error;\n    }\n\n    try {\n      phoneNumber = PhoneNumberUtil.getInstance().parse(control.value.nationalNumber, control.value.isoCode);\n    } catch (e) {\n      return error;\n    }\n\n    if (!phoneNumber) {\n      return error;\n    } else {\n      if (!PhoneNumberUtil.getInstance().isValidNumberForRegion(phoneNumber, control.value.isoCode)) {\n        return error;\n      }\n    }\n  }\n\n}\nexport let IonIntlTelInputValidatorDirective = /*#__PURE__*/(() => {\n  class IonIntlTelInputValidatorDirective {\n    validate(control) {\n      return IonIntlTelInputValidators.phone(control);\n    }\n\n  }\n\n  IonIntlTelInputValidatorDirective.ɵfac = function IonIntlTelInputValidatorDirective_Factory(t) {\n    return new (t || IonIntlTelInputValidatorDirective)();\n  };\n\n  IonIntlTelInputValidatorDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: IonIntlTelInputValidatorDirective,\n    selectors: [[\"\", \"ionIntlTelInputValid\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: IonIntlTelInputValidatorDirective,\n      multi: true\n    }])]\n  });\n  return IonIntlTelInputValidatorDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}