{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { IonIntlTelInputValidators } from \"projects/ion-intl-tel-input/src/public-api\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"../../../projects/ion-intl-tel-input/src/lib/ion-intl-tel-input/ion-intl-tel-input.component\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../../projects/ion-intl-tel-input/src/lib/ion-intl-tel-input.directive\";\nimport * as i5 from \"@angular/common\";\n\nfunction HomePage_div_14_ion_text_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-text\", 13)(1, \"p\", 14)(2, \"sub\");\n    i0.ɵɵtext(3, \"Phone is required.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction HomePage_div_14_ion_text_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-text\", 13)(1, \"p\", 14)(2, \"sub\");\n    i0.ɵɵtext(3, \"Phone is not valid.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction HomePage_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, HomePage_div_14_ion_text_1_Template, 4, 0, \"ion-text\", 12);\n    i0.ɵɵtemplate(2, HomePage_div_14_ion_text_2_Template, 4, 0, \"ion-text\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(13);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.errors.phone);\n  }\n}\n\nfunction HomePage_div_26_ion_text_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-text\", 13)(1, \"p\", 14)(2, \"sub\");\n    i0.ɵɵtext(3, \"Phone is required.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction HomePage_div_26_ion_text_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-text\", 13)(1, \"p\", 14)(2, \"sub\");\n    i0.ɵɵtext(3, \"Phone number is not valid.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction HomePage_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, HomePage_div_26_ion_text_1_Template, 4, 0, \"ion-text\", 12);\n    i0.ɵɵtemplate(2, HomePage_div_26_ion_text_2_Template, 4, 0, \"ion-text\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.phoneNumber.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.phoneNumber.errors.phone);\n  }\n}\n\nexport let HomePage = /*#__PURE__*/(() => {\n  class HomePage {\n    constructor() {\n      this.phone = {\n        e164Number: \"+31104122467\",\n        dialCode: \"+31\",\n        internationalNumber: \"+31 10 412 2467\",\n        isoCode: \"nl\",\n        nationalNumber: \"010 412 2467\"\n      };\n      this.formValue = {\n        phoneNumber: this.phone,\n        test: ''\n      };\n      this.defaultCountryIsoTest = 'pk';\n      this.dialCodePrefix = '+';\n      this.enableAutoCountrySelect = false;\n      this.enablePlaceholder = true;\n      this.fallbackPlaceholder = '';\n      this.inputPlaceholder = '';\n      this.maxLength = '15';\n      this.modalTitle = 'Select Country';\n      this.modalCssClass = '';\n      this.modalSearchPlaceholder = 'Enter country name';\n      this.modalCloseText = 'Close';\n      this.modalCloseButtonSlot = 'end';\n      this.modalCanSearch = true;\n      this.modalShouldBackdropClose = true;\n      this.modalShouldFocusSearchbar = true;\n      this.modalSearchFailText = 'No countries found.';\n      this.onlyCountries = [];\n      this.preferredCountries = [];\n      this.selectFirstCountry = true;\n      this.separateDialCode = true;\n      this.disableTest = false;\n    }\n\n    ngOnInit() {\n      this.form = new FormGroup({\n        phoneNumber: new FormControl({\n          value:\n          /* null */\n          this.formValue.phoneNumber,\n          disabled: this.disableTest\n        }, [Validators.required, IonIntlTelInputValidators.phone])\n      });\n    }\n\n    logPhone() {\n      console.log(this.phone);\n    }\n\n    get phoneNumber() {\n      return this.form.get('phoneNumber');\n    }\n\n    onSubmit() {\n      console.log(this.phoneNumber);\n      console.log(this.phoneNumber.value);\n    }\n\n  }\n\n  HomePage.ɵfac = function HomePage_Factory(t) {\n    return new (t || HomePage)();\n  };\n\n  HomePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomePage,\n    selectors: [[\"app-home\"]],\n    decls: 30,\n    vars: 44,\n    consts: [[1, \"ion-padding\"], [\"lines\", \"full\", 1, \"ion-no-margin\", \"ion-no-padding\", \"ion-margin-bottom\"], [\"position\", \"floating\"], [\"id\", \"phone\", \"name\", \"phone\", \"required\", \"\", \"ionIntlTelInputValid\", \"\", 3, \"ngModel\", \"defaultCountryiso\", \"dialCodePrefix\", \"enableAutoCountrySelect\", \"enablePlaceholder\", \"fallbackPlaceholder\", \"inputPlaceholder\", \"maxLength\", \"modalTitle\", \"modalCssClass\", \"modalSearchPlaceholder\", \"modalCloseText\", \"modalCloseButtonSlot\", \"modalCanSearch\", \"modalShouldBackdropClose\", \"modalShouldFocusSearchbar\", \"modalSearchFailText\", \"onlyCountries\", \"preferredCountries\", \"selectFirstCountry\", \"separateDialCode\", \"ngModelChange\"], [\"phoneControl\", \"ngModel\"], [4, \"ngIf\"], [1, \"ion-text-center\"], [\"fill\", \"solid\", \"type\", \"button\", 3, \"click\"], [1, \"ion-margin-top\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"phoneNumber\", 3, \"defaultCountryiso\", \"dialCodePrefix\", \"enableAutoCountrySelect\", \"enablePlaceholder\", \"fallbackPlaceholder\", \"inputPlaceholder\", \"maxLength\", \"modalTitle\", \"modalCssClass\", \"modalSearchPlaceholder\", \"modalCloseText\", \"modalCloseButtonSlot\", \"modalCanSearch\", \"modalShouldBackdropClose\", \"modalShouldFocusSearchbar\", \"modalSearchFailText\", \"onlyCountries\", \"preferredCountries\", \"selectFirstCountry\", \"separateDialCode\"], [\"fill\", \"solid\", \"type\", \"submit\"], [\"color\", \"danger\", 4, \"ngIf\"], [\"color\", \"danger\"], [1, \"ion-no-margin\"]],\n    template: function HomePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \" Ion Intl Tel Input \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"ion-content\")(5, \"div\", 0)(6, \"h3\");\n        i0.ɵɵtext(7, \"Template Driven Forms\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ion-list\", 1)(9, \"ion-item\")(10, \"ion-label\", 2);\n        i0.ɵɵtext(11, \"Tel Input\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ion-intl-tel-input\", 3, 4);\n        i0.ɵɵlistener(\"ngModelChange\", function HomePage_Template_ion_intl_tel_input_ngModelChange_12_listener($event) {\n          return ctx.phone = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(14, HomePage_div_14_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelementStart(15, \"div\", 6)(16, \"ion-button\", 7);\n        i0.ɵɵlistener(\"click\", function HomePage_Template_ion_button_click_16_listener() {\n          return ctx.logPhone();\n        });\n        i0.ɵɵtext(17, \" Submit \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"h3\", 8);\n        i0.ɵɵtext(19, \"Reactive Forms\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function HomePage_Template_form_ngSubmit_20_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(21, \"ion-list\", 1)(22, \"ion-item\")(23, \"ion-label\", 2);\n        i0.ɵɵtext(24, \"Tel Input\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"ion-intl-tel-input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, HomePage_div_26_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 6)(28, \"ion-button\", 11);\n        i0.ɵɵtext(29, \" Submit \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(13);\n\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.phone)(\"defaultCountryiso\", ctx.defaultCountryIsoTest)(\"dialCodePrefix\", ctx.dialCodePrefix)(\"enableAutoCountrySelect\", ctx.enableAutoCountrySelect)(\"enablePlaceholder\", ctx.enablePlaceholder)(\"fallbackPlaceholder\", ctx.fallbackPlaceholder)(\"inputPlaceholder\", ctx.inputPlaceholder)(\"maxLength\", ctx.maxLength)(\"modalTitle\", ctx.modalTitle)(\"modalCssClass\", ctx.modalCssClass)(\"modalSearchPlaceholder\", ctx.modalSearchPlaceholder)(\"modalCloseText\", ctx.modalCloseText)(\"modalCloseButtonSlot\", ctx.modalCloseButtonSlot)(\"modalCanSearch\", ctx.modalCanSearch)(\"modalShouldBackdropClose\", ctx.modalShouldBackdropClose)(\"modalShouldFocusSearchbar\", ctx.modalShouldFocusSearchbar)(\"modalSearchFailText\", ctx.modalSearchFailText)(\"onlyCountries\", ctx.onlyCountries)(\"preferredCountries\", ctx.preferredCountries)(\"selectFirstCountry\", ctx.selectFirstCountry)(\"separateDialCode\", ctx.separateDialCode);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.invalid && _r0.touched);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"defaultCountryiso\", ctx.defaultCountryIsoTest)(\"dialCodePrefix\", ctx.dialCodePrefix)(\"enableAutoCountrySelect\", ctx.enableAutoCountrySelect)(\"enablePlaceholder\", ctx.enablePlaceholder)(\"fallbackPlaceholder\", ctx.fallbackPlaceholder)(\"inputPlaceholder\", ctx.inputPlaceholder)(\"maxLength\", ctx.maxLength)(\"modalTitle\", ctx.modalTitle)(\"modalCssClass\", ctx.modalCssClass)(\"modalSearchPlaceholder\", ctx.modalSearchPlaceholder)(\"modalCloseText\", ctx.modalCloseText)(\"modalCloseButtonSlot\", ctx.modalCloseButtonSlot)(\"modalCanSearch\", ctx.modalCanSearch)(\"modalShouldBackdropClose\", ctx.modalShouldBackdropClose)(\"modalShouldFocusSearchbar\", ctx.modalShouldFocusSearchbar)(\"modalSearchFailText\", ctx.modalSearchFailText)(\"onlyCountries\", ctx.onlyCountries)(\"preferredCountries\", ctx.preferredCountries)(\"selectFirstCountry\", ctx.selectFirstCountry)(\"separateDialCode\", ctx.separateDialCode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.phoneNumber.invalid && ctx.phoneNumber.touched);\n      }\n    },\n    directives: [i1.IonHeader, i1.IonToolbar, i1.IonTitle, i1.IonContent, i1.IonList, i1.IonItem, i1.IonLabel, i2.IonIntlTelInputComponent, i3.RequiredValidator, i4.IonIntlTelInputValidatorDirective, i3.NgControlStatus, i3.NgModel, i5.NgIf, i1.IonText, i1.IonButton, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"ion-item[_ngcontent-%COMP%]{--padding-start: 0px}\"]\n  });\n  return HomePage;\n})();","map":null,"metadata":{},"sourceType":"module"}